п.п. 1-2 содержат возможные from оптимизации кода
п.п. 3-10 не не содержатся (вроде) в коде примера, но желательны при дальнейшем развитии, служат шпаргалкой-напоминалкой.

1) Blind faith // Слепая вера
    Нужно добавить прорверки на корректность получаемых от пользователя/сервисов данных, дабы избежать некоректных значений, не предусмотренных кодом.

2) Anemic Domain Model // Боязнь размещать логику в объектах предметной области
    Рассмотреть возможность размещения в объектах кода бизнес-логики.

3) God object // Божественный объект
    В данном приложении не наблюадется, но нужно следить чтобы код объекта выполнял лиш необходимые операции, вытекает из п. 2

4) Poltergeist // Полтергейст
    В данном приложении не наблюадется (вроде), но желательно следить за отсутствием подобных решений.

5) Privatization // Приватизация
    В данном приложении не наблюадется (вроде), но желательно следить за отсутствием подобных решений.

6) Stub // Заглушка
    В данном приложении не наблюадется (вроде), но желательно следить за отсутствием подобных решений.

7) Copy–Paste // Программирование методом копирования–вставки
    В данном приложении не наблюадется (вроде), но желательно следить за отсутствием подобных решений.

8) Improbability factor  // Фактор невероятности
    Аналогично п.1 необходимо добавить прорверки на корректность получаемых от пользователя/сервисов данных, дабы избежать некоректных значений, не предусмотренных кодом.

9) Reinventing the wheel // Изобретение велосипеда
    При решении паспространенных задач стараться искать готовые и проверенные решения.

10) Reinventing the square wheel // Изобретение квадратного колеса
     Аналогично п. 9.

